<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>