<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>